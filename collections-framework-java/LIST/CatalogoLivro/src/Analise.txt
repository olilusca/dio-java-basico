"private List<Livro> listaLivro;"
- Atributo do tipo lista de objetos da classe Livro, ou seja, recebe vários objetos de Livro dentro dele.

"public CatalogoLivros()"
- Construtor da classe declarada explicitamente

"this.listaLivro = new ArrayList<>();"
- Instância do atributo da classe (lista de tipo Livro), ou seja, toda vez que um objeto do CatalogoLivros for criado na classe principal, uma nova lista vazia será criada.

"listaLivro.add(new Livro(nome, autor, ano));"
- Método de lista .add() declarado para poder adicionar objetos de Livro dentro da lista.
- Dentro do método .add(), é passado o construtor da classe Livro, que é inicializada obrigatoriamente com atributos da classe Livro.
- Ao inserir os dados dos atributos, um objeto de livro será criado e adicionado a lista.

"listaLivro.size();"
- Método de lista .size() é declarado para enumerar a quantidade de objetos presentes dentro do do atributo de lista de Livro.

"List<Livro> livrosPorAutor = new ArrayList<>();"
- Nova lista do tipo Livro é criada com a finalidade de armazenar objetos para filtragem posterior

"for(Livro l : listaLivro)"
- Laço que itera na variável "l" do tipo Livro, todos os elementos contidos no atributo da classe.

"if(l.getAutor().equalsIgnoreCase((autor)))"
- Condicional que verifica que há alguma palavra do atributo autor da classe Livro, igual a passada no parâmetro "autor" do método "pesquisarPorAutor()"

"livrosPorAutor.add(l);"
- Os objetos que atendem a condição especificada no parâmetro do método (linha 19), são adicionados na lista criada (linha 20).







